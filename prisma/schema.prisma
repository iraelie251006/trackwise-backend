generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

enum AuthProvider {
  CREDENTIALS
  GOOGLE
  GITHUB
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String // hashed
  provider      AuthProvider   @default(CREDENTIALS)
  refreshTokens RefreshToken[] // one-to-many relationship
  alert         Alert[]
  image         String?
  role          Role           @default(USER)
  expenses      Expense[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String // hashed refresh token
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Expense {
  id          String   @id @default(cuid())
  title       String
  amount      Float
  date        DateTime
  category    Category
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  isRecurring Boolean  @default(false)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Alert {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  threshold Float // e.g. 5000 RWF/month
  triggered Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  FOOD
  TRANSPORT
  UTILITIES
  ENTERTAINMENT
  HEALTH
  EDUCATION
  SAVINGS
  OTHER
}
